pipeline {
    agent any
    paramters {
        choice(name: 'BRANCHNAME', choices: ['dev', 'test', 'prod'], description: '')
    }
    stages {
        stage('Preparation') {
            steps {
                echo 'prepare github repo....'
                git branch: 'master', url: 'https://github.com/swelams/helm'
            }
        }

        stage('nexus-login'){
            steps {
                echo 'login to nexus '
                withCredentials([usernamePassword(credentialsId: 'nexus-login', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
                    sh "echo $PASSWORD | docker login -u $USERNAME ec2-100-24-24-1.compute-1.amazonaws.com:8085 --password-stdin"
                }
            }
        }


        stage('Build-client') {
            steps {
                echo 'building client image....'
                sh "docker build badreads-frontend/. -t ec2-100-24-24-1.compute-1.amazonaws.com:8085/client:${env.BUILD_NUMBER}"
            }
        }

        stage('Build-server') {
            steps {
                echo 'building server image...'
                sh "docker build badreads-backend/. -t ec2-100-24-24-1.compute-1.amazonaws.com:8085/server:99"
            }
        }


        stage('artifact-client') {
            steps {
                echo ' pushing client image into nexus repo...'
                sh "docker push ec2-100-24-24-1.compute-1.amazonaws.com:8085/client:${env.BUILD_NUMBER}"
            }
        }

        stage('artifact-server') {
            steps {
                echo 'pushing server image to nexus repo...'
                sh "docker push ec2-100-24-24-1.compute-1.amazonaws.com:8085/server:99"    
            }
        }


        stage('updating deployment files'){
            steps {
                echo 'replacing old images with the new one'
                sh "sed -i \"s|image:.*|image: ec2-100-24-24-1.compute-1.amazonaws.com:8085/client:${env.BUILD_NUMBER}|g\" k8s/frontend-deployment.yaml"
                sh "sed -i \"s|image:.*|image: ec2-100-24-24-1.compute-1.amazonaws.com:8085/server:99|g\" k8s/backend-deployment.yaml"

            }
        }

        stage('Deploy to minikube') {
            steps {
                echo 'Deploying to minikube'
                withCredentials([file(credentialsId:'kube-config', variable:'KUBECONFIG')]){
                script{
                    sh "kubectl apply -f k8s --namespace ${params.BRANCHNAME}"}
                }
            }
        }
    }
}   
    
    
                                                            


